buildscript {
    dependencies {
        classpath("com.google.protobuf:protobuf-gradle-plugin:${protobuf_gradle_version}")
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "com.dorongold.task-tree" version "1.5"
}

subprojects {
    group = 'com.socialscore'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'


    repositories {
        mavenCentral()
        jcenter()
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${spring_boot_version}")
        }
    }

    sourceSets {
        intTest {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'

        implementation("org.springframework.boot:spring-boot-starter-logging")

        implementation("javax.annotation:javax.annotation-api:${javax_annotation_version}")

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        intTestImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    configurations {
        intTestImplementation.extendsFrom implementation
        intTestRuntimeOnly.extendsFrom runtimeOnly
    }

    test {
        useJUnitPlatform()
    }

    //Independent of check task to run it separately as heavy tests with testcontainers
    task integrationTest(type: Test) {
        description = 'Runs integration tests'
        group = 'verification'

        testClassesDirs = sourceSets.intTest.output.classesDirs
        classpath = sourceSets.intTest.runtimeClasspath

        useJUnitPlatform()
    }

}
